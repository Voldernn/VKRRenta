{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u0432\\u043A\\u0440\\\\VKRRenta\\\\frontend\\\\src\\\\Employee\\\\ContractsManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getContracts, createContract, updateContract } from './services/ContractService';\nimport { getUsers } from './services/UserService';\nimport ContractList from './components/Contracts/ContractList';\nimport ContractForm from './components/Contracts/ContractForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContractsManagement = () => {\n  _s();\n  const [contracts, setContracts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [formData, setFormData] = useState({\n    user_id: '',\n    status: 'pending',\n    description: '',\n    monthly_payment: 0,\n    one_time_payment: 0,\n    total_payment: 0\n  });\n  const [editMode, setEditMode] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [contractsData, usersData] = await Promise.all([getContracts(), getUsers()]);\n        setContracts(contractsData);\n        setUsers(usersData);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [editMode]); // Зависимость от editMode\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: name.includes('payment') ? parseFloat(value) || 0 : value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      let updatedContract;\n      if (formData.id) {\n        updatedContract = await updateContract(formData.id, formData);\n        setContracts(prev => prev.map(c => c.id === formData.id ? updatedContract : c));\n      } else {\n        updatedContract = await createContract(formData);\n        setContracts(prev => [...prev, updatedContract]);\n      }\n      setFormData({\n        user_id: '',\n        status: 'pending',\n        description: '',\n        monthly_payment: 0,\n        one_time_payment: 0,\n        total_payment: 0\n      });\n      setEditMode(false);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleEdit = contract => {\n    setFormData(contract);\n    setEditMode(true);\n  };\n  const handleCancel = () => {\n    setFormData({\n      user_id: '',\n      status: 'pending',\n      description: '',\n      monthly_payment: 0,\n      one_time_payment: 0,\n      total_payment: 0\n    });\n    setEditMode(false);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center py-8\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto py-8 px-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0434\\u043E\\u0433\\u043E\\u0432\\u043E\\u0440\\u0430\\u043C\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), !editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditMode(true),\n        className: \"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded\",\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0434\\u043E\\u0433\\u043E\\u0432\\u043E\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-2 bg-red-100 text-red-700 rounded\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this), editMode ? /*#__PURE__*/_jsxDEV(ContractForm, {\n      contract: formData,\n      users: users,\n      onChange: handleInputChange,\n      onSubmit: handleSubmit,\n      onCancel: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ContractList, {\n      contracts: contracts,\n      onEdit: handleEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(ContractsManagement, \"4WfMY5H+4GCfmwO8a/ZzkUuPmaY=\", false, function () {\n  return [useNavigate];\n});\n_c = ContractsManagement;\nexport default ContractsManagement;\nvar _c;\n$RefreshReg$(_c, \"ContractsManagement\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getContracts","createContract","updateContract","getUsers","ContractList","ContractForm","jsxDEV","_jsxDEV","ContractsManagement","_s","contracts","setContracts","users","setUsers","loading","setLoading","error","setError","formData","setFormData","user_id","status","description","monthly_payment","one_time_payment","total_payment","editMode","setEditMode","navigate","fetchData","contractsData","usersData","Promise","all","err","message","handleInputChange","e","name","value","target","prev","includes","parseFloat","handleSubmit","preventDefault","updatedContract","id","map","c","handleEdit","contract","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","onSubmit","onCancel","onEdit","_c","$RefreshReg$"],"sources":["E:/вкр/VKRRenta/frontend/src/Employee/ContractsManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getContracts, createContract, updateContract } from './services/ContractService';\r\nimport { getUsers } from './services/UserService';\r\nimport ContractList from './components/Contracts/ContractList';\r\nimport ContractForm from './components/Contracts/ContractForm';\r\n\r\nconst ContractsManagement = () => {\r\n  const [contracts, setContracts] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    user_id: '',\r\n    status: 'pending',\r\n    description: '',\r\n    monthly_payment: 0,\r\n    one_time_payment: 0,\r\n    total_payment: 0\r\n  });\r\n  const [editMode, setEditMode] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [contractsData, usersData] = await Promise.all([\r\n          getContracts(),\r\n          getUsers()\r\n        ]);\r\n        setContracts(contractsData);\r\n        setUsers(usersData);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [editMode]); // Зависимость от editMode\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: name.includes('payment') ? parseFloat(value) || 0 : value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let updatedContract;\r\n      \r\n      if (formData.id) {\r\n        updatedContract = await updateContract(formData.id, formData);\r\n        setContracts(prev => prev.map(c => c.id === formData.id ? updatedContract : c));\r\n      } else {\r\n        updatedContract = await createContract(formData);\r\n        setContracts(prev => [...prev, updatedContract]);\r\n      }\r\n\r\n      setFormData({\r\n        user_id: '',\r\n        status: 'pending',\r\n        description: '',\r\n        monthly_payment: 0,\r\n        one_time_payment: 0,\r\n        total_payment: 0\r\n      });\r\n      setEditMode(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (contract) => {\r\n    setFormData(contract);\r\n    setEditMode(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setFormData({\r\n      user_id: '',\r\n      status: 'pending',\r\n      description: '',\r\n      monthly_payment: 0,\r\n      one_time_payment: 0,\r\n      total_payment: 0\r\n    });\r\n    setEditMode(false);\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center py-8\">Загрузка...</div>;\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto py-8 px-4\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold\">Управление договорами</h1>\r\n        {!editMode && (\r\n          <button\r\n            onClick={() => setEditMode(true)}\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded\"\r\n          >\r\n            Создать договор\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {error && <div className=\"mb-4 p-2 bg-red-100 text-red-700 rounded\">{error}</div>}\r\n\r\n      {editMode ? (\r\n        <ContractForm\r\n          contract={formData}\r\n          users={users}\r\n          onChange={handleInputChange}\r\n          onSubmit={handleSubmit}\r\n          onCancel={handleCancel}\r\n        />\r\n      ) : (\r\n        <ContractList \r\n          contracts={contracts} \r\n          onEdit={handleEdit}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContractsManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}