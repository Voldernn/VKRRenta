{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u0432\\u043A\\u0440\\\\Project\\\\frontend\\\\src\\\\Employee\\\\ChatManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3001';\nconst ChatManagement = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [participants, setParticipants] = useState([]);\n  const [showParticipants, setShowParticipants] = useState(false);\n  const socketRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Инициализация WebSocket соединения\n    socketRef.current = io(API_URL);\n\n    // Загрузка списка чатов\n    const fetchChats = async () => {\n      try {\n        const response = await fetch(`${API_URL}/chat/my`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`\n          }\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Ошибка ${response.status}: ${errorText}`);\n        }\n        const data = await response.json();\n        // Сортировка чатов по дате создания\n        const sortedChats = data.sort((a, b) => new Date(b.creation_time) - new Date(a.creation_time));\n        setChats(sortedChats);\n        if (sortedChats.length > 0) {\n          setSelectedChat(sortedChats[0]);\n        }\n      } catch (err) {\n        setError(err.message);\n        console.error('Ошибка загрузки чатов:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchChats();\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (selectedChat) {\n      const employeeId = localStorage.getItem('employeeId');\n      // Присоединяемся к чату через WebSocket\n      socketRef.current.emit('join-chat', selectedChat.id, employeeId);\n\n      // Загружаем историю сообщений и участников\n      const fetchChatData = async () => {\n        try {\n          // Загрузка сообщений\n          const messagesResponse = await fetch(`${API_URL}/chat/${selectedChat.id}/messages`, {\n            headers: {\n              'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`\n            }\n          });\n          const messagesData = await messagesResponse.json();\n          setMessages(messagesData.reverse());\n\n          // Загрузка участников\n          const participantsResponse = await fetch(`${API_URL}/chat/${selectedChat.id}/participants`, {\n            headers: {\n              'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`\n            }\n          });\n          const participantsData = await participantsResponse.json();\n          setParticipants(participantsData);\n        } catch (err) {\n          setError(err.message);\n        }\n      };\n      fetchChatData();\n    }\n  }, [selectedChat]);\n  useEffect(() => {\n    const socket = socketRef.current;\n    const handleNewMessage = message => {\n      if (message.chat_id === (selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.id)) {\n        setMessages(prev => [message, ...prev]);\n      }\n    };\n    socket.on('new-message', handleNewMessage);\n    return () => {\n      socket.off('new-message', handleNewMessage);\n    };\n  }, [selectedChat]);\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !selectedChat) return;\n\n    // Получаем ID сотрудника из localStorage (должно быть установлено при логине)\n    const employeeId = parseInt(localStorage.getItem('employeeId'));\n    if (!employeeId) {\n      setError('ID сотрудника не найден. Пожалуйста, войдите снова.');\n      return;\n    }\n    try {\n      var _localStorage$getItem, _localStorage$getItem2;\n      // Оптимистичное обновление UI\n      const tempMessage = {\n        id: Date.now(),\n        // Временный ID\n        chat_id: selectedChat.id,\n        employee_id: employeeId,\n        user_id: null,\n        content: newMessage,\n        time: new Date().toISOString(),\n        type: 'employee',\n        first_name: ((_localStorage$getItem = localStorage.getItem('employeeName')) === null || _localStorage$getItem === void 0 ? void 0 : _localStorage$getItem.split(' ')[0]) || 'Сотрудник',\n        last_name: ((_localStorage$getItem2 = localStorage.getItem('employeeName')) === null || _localStorage$getItem2 === void 0 ? void 0 : _localStorage$getItem2.split(' ')[1]) || ''\n      };\n      setMessages(prev => [tempMessage, ...prev]);\n\n      // Отправка через HTTP (основное сохранение)\n      const response = await fetch(`${API_URL}/chat/${selectedChat.id}/messages`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`\n        },\n        body: JSON.stringify({\n          content: newMessage\n        })\n      });\n      if (!response.ok) throw new Error('Ошибка HTTP-запроса');\n\n      // Отправка через WebSocket (для реального обновления)\n      socketRef.current.emit('send-message', {\n        chatId: selectedChat.id,\n        userId: employeeId,\n        // Важно: передаем число, а не строку!\n        content: newMessage,\n        isEmployee: true\n      });\n      setNewMessage('');\n    } catch (err) {\n      // Откат оптимистичного обновления\n      setMessages(prev => prev.filter(m => m.id !== tempMessage.id));\n      setError(err.message);\n    }\n  };\n  const handleCreateChat = async userId => {\n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`\n        },\n        body: JSON.stringify({\n          userId\n        })\n      });\n      const data = await response.json();\n      setChats(prev => [data, ...prev]);\n      setSelectedChat(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleAddUserToChat = async userId => {\n    try {\n      await fetch(`${API_URL}/chat/${selectedChat.id}/add-user`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`\n        },\n        body: JSON.stringify({\n          userId\n        })\n      });\n      // Обновляем список участников\n      const participantsResponse = await fetch(`${API_URL}/chat/${selectedChat.id}/participants`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`\n        }\n      });\n      const participantsData = await participantsResponse.json();\n      setParticipants(participantsData);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center py-8\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0447\\u0430\\u0442\\u0430\\u043C\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-2 bg-red-100 text-red-700 rounded\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-[600px] border rounded-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/3 border-r bg-gray-50 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-semibold\",\n            children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u0447\\u0430\\u0442\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto\",\n          children: chats.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 text-center text-gray-500\",\n            children: \"\\u041D\\u0435\\u0442 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0445 \\u0447\\u0430\\u0442\\u043E\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this) : chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-4 border-b cursor-pointer hover:bg-gray-100 ${(selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.id) === chat.id ? 'bg-blue-50' : ''}`,\n            onClick: () => setSelectedChat(chat),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium\",\n              children: chat.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"ID: \", chat.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-400\",\n              children: [\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D: \", new Date(chat.creation_time).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2/3 flex flex-col\",\n        children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-b flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"font-semibold\",\n              children: selectedChat.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowParticipants(!showParticipants),\n              className: \"text-sm text-blue-600 hover:text-blue-800\",\n              children: showParticipants ? 'Скрыть участников' : 'Показать участников'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), showParticipants && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-b bg-gray-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium mb-2\",\n              children: \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438 \\u0447\\u0430\\u0442\\u0430:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-2\",\n              children: participants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-white px-3 py-1 rounded-full border text-sm flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mr-1\",\n                  children: [participant.first_name, \" \", participant.last_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `text-xs px-1 rounded ${participant.type === 'employee' ? 'bg-green-100 text-green-800' : 'bg-blue-100 text-blue-800'}`,\n                  children: participant.type === 'employee' ? 'Сотрудник' : 'Пользователь'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n            children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex ${message.type === 'employee' ? 'justify-end' : 'justify-start'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${message.type === 'employee' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`,\n                style: {\n                  wordBreak: 'break-word'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-semibold\",\n                  children: [message.first_name, \" \", message.last_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"whitespace-pre-wrap\",\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs opacity-70 mt-1\",\n                  children: new Date(message.time).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-t\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newMessage,\n                onChange: e => setNewMessage(e.target.value),\n                onKeyPress: e => e.key === 'Enter' && handleSendMessage(),\n                placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n                className: \"flex-1 border rounded px-3 py-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSendMessage,\n                className: \"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded\",\n                children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center justify-center text-gray-500\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0447\\u0430\\u0442 \\u0434\\u043B\\u044F \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatManagement, \"8FVoSaxDtnbxrzAe+YdQpVz1gC4=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatManagement;\nexport default ChatManagement;\nvar _c;\n$RefreshReg$(_c, \"ChatManagement\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","io","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","ChatManagement","_s","chats","setChats","selectedChat","setSelectedChat","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","participants","setParticipants","showParticipants","setShowParticipants","socketRef","navigate","current","fetchChats","response","fetch","headers","localStorage","getItem","ok","errorText","text","Error","status","data","json","sortedChats","sort","a","b","Date","creation_time","length","err","message","console","disconnect","employeeId","emit","id","fetchChatData","messagesResponse","messagesData","reverse","participantsResponse","participantsData","socket","handleNewMessage","chat_id","prev","on","off","handleSendMessage","trim","parseInt","_localStorage$getItem","_localStorage$getItem2","tempMessage","now","employee_id","user_id","content","time","toISOString","type","first_name","split","last_name","method","body","JSON","stringify","chatId","userId","isEmployee","filter","m","handleCreateChat","handleAddUserToChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","onClick","name","toLocaleString","participant","index","style","wordBreak","value","onChange","e","target","onKeyPress","key","placeholder","_c","$RefreshReg$"],"sources":["E:/вкр/Project/frontend/src/Employee/ChatManagement.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\n\r\nconst API_URL = 'http://localhost:3001';\r\n\r\nconst ChatManagement = () => {\r\n  const [chats, setChats] = useState([]);\r\n  const [selectedChat, setSelectedChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [participants, setParticipants] = useState([]);\r\n  const [showParticipants, setShowParticipants] = useState(false);\r\n  const socketRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Инициализация WebSocket соединения\r\n    socketRef.current = io(API_URL);\r\n\r\n    // Загрузка списка чатов\r\n    const fetchChats = async () => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/chat/my`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`\r\n          }\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          throw new Error(`Ошибка ${response.status}: ${errorText}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        // Сортировка чатов по дате создания\r\n        const sortedChats = data.sort((a, b) => new Date(b.creation_time) - new Date(a.creation_time));\r\n        setChats(sortedChats);\r\n        if (sortedChats.length > 0) {\r\n          setSelectedChat(sortedChats[0]);\r\n        }\r\n      } catch (err) {\r\n        setError(err.message);\r\n        console.error('Ошибка загрузки чатов:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchChats();\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedChat) {\r\n      const employeeId = localStorage.getItem('employeeId');\r\n      // Присоединяемся к чату через WebSocket\r\n      socketRef.current.emit('join-chat', selectedChat.id, employeeId);\r\n  \r\n      // Загружаем историю сообщений и участников\r\n      const fetchChatData = async () => {\r\n        try {\r\n          // Загрузка сообщений\r\n          const messagesResponse = await fetch(`${API_URL}/chat/${selectedChat.id}/messages`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`\r\n            }\r\n          });\r\n          const messagesData = await messagesResponse.json();\r\n          setMessages(messagesData.reverse());\r\n          \r\n          // Загрузка участников\r\n          const participantsResponse = await fetch(`${API_URL}/chat/${selectedChat.id}/participants`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`\r\n            }\r\n          });\r\n          const participantsData = await participantsResponse.json();\r\n          setParticipants(participantsData);\r\n        } catch (err) {\r\n          setError(err.message);\r\n        }\r\n      };\r\n  \r\n      fetchChatData();\r\n    }\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    const socket = socketRef.current;\r\n  \r\n    const handleNewMessage = (message) => {\r\n      if (message.chat_id === selectedChat?.id) {\r\n        setMessages(prev => [message, ...prev]);\r\n      }\r\n    };\r\n  \r\n    socket.on('new-message', handleNewMessage);\r\n  \r\n    return () => {\r\n      socket.off('new-message', handleNewMessage);\r\n    };\r\n  }, [selectedChat]);\r\n\r\nconst handleSendMessage = async () => {\r\n  if (!newMessage.trim() || !selectedChat) return;\r\n\r\n  // Получаем ID сотрудника из localStorage (должно быть установлено при логине)\r\n  const employeeId = parseInt(localStorage.getItem('employeeId'));\r\n  if (!employeeId) {\r\n    setError('ID сотрудника не найден. Пожалуйста, войдите снова.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Оптимистичное обновление UI\r\n    const tempMessage = {\r\n      id: Date.now(), // Временный ID\r\n      chat_id: selectedChat.id,\r\n      employee_id: employeeId,\r\n      user_id: null,\r\n      content: newMessage,\r\n      time: new Date().toISOString(),\r\n      type: 'employee',\r\n      first_name: localStorage.getItem('employeeName')?.split(' ')[0] || 'Сотрудник',\r\n      last_name: localStorage.getItem('employeeName')?.split(' ')[1] || ''\r\n    };\r\n    setMessages(prev => [tempMessage, ...prev]);\r\n\r\n    // Отправка через HTTP (основное сохранение)\r\n    const response = await fetch(`${API_URL}/chat/${selectedChat.id}/messages`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`\r\n      },\r\n      body: JSON.stringify({ content: newMessage })\r\n    });\r\n\r\n    if (!response.ok) throw new Error('Ошибка HTTP-запроса');\r\n\r\n    // Отправка через WebSocket (для реального обновления)\r\n    socketRef.current.emit('send-message', {\r\n      chatId: selectedChat.id,\r\n      userId: employeeId, // Важно: передаем число, а не строку!\r\n      content: newMessage,\r\n      isEmployee: true\r\n    });\r\n\r\n    setNewMessage('');\r\n  } catch (err) {\r\n    // Откат оптимистичного обновления\r\n    setMessages(prev => prev.filter(m => m.id !== tempMessage.id));\r\n    setError(err.message);\r\n  }\r\n};\r\n\r\n  const handleCreateChat = async (userId) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/chat`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`\r\n        },\r\n        body: JSON.stringify({ userId })\r\n      });\r\n      const data = await response.json();\r\n      setChats(prev => [data, ...prev]);\r\n      setSelectedChat(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleAddUserToChat = async (userId) => {\r\n    try {\r\n      await fetch(`${API_URL}/chat/${selectedChat.id}/add-user`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`\r\n        },\r\n        body: JSON.stringify({ userId })\r\n      });\r\n      // Обновляем список участников\r\n      const participantsResponse = await fetch(`${API_URL}/chat/${selectedChat.id}/participants`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`\r\n        }\r\n      });\r\n      const participantsData = await participantsResponse.json();\r\n      setParticipants(participantsData);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center py-8\">Загрузка...</div>;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold\">Управление чатами</h1>\r\n      </div>\r\n\r\n      {error && <div className=\"mb-4 p-2 bg-red-100 text-red-700 rounded\">{error}</div>}\r\n\r\n      <div className=\"flex h-[600px] border rounded-lg overflow-hidden\">\r\n        {/* Список чатов */}\r\n        <div className=\"w-1/3 border-r bg-gray-50 flex flex-col\">\r\n          <div className=\"p-4 border-b\">\r\n            <h2 className=\"font-semibold\">Доступные чаты</h2>\r\n          </div>\r\n          <div className=\"flex-1 overflow-y-auto\">\r\n            {chats.length === 0 ? (\r\n              <div className=\"p-4 text-center text-gray-500\">Нет доступных чатов</div>\r\n            ) : (\r\n              chats.map(chat => (\r\n                <div \r\n                  key={chat.id} \r\n                  className={`p-4 border-b cursor-pointer hover:bg-gray-100 ${selectedChat?.id === chat.id ? 'bg-blue-50' : ''}`}\r\n                  onClick={() => setSelectedChat(chat)}\r\n                >\r\n                  <h3 className=\"font-medium\">{chat.name}</h3>\r\n                  <p className=\"text-sm text-gray-500\">ID: {chat.id}</p>\r\n                  <p className=\"text-xs text-gray-400\">Создан: {new Date(chat.creation_time).toLocaleString()}</p>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Окно чата */}\r\n        <div className=\"w-2/3 flex flex-col\">\r\n          {selectedChat ? (\r\n            <>\r\n              <div className=\"p-4 border-b flex justify-between items-center\">\r\n                <h2 className=\"font-semibold\">{selectedChat.name}</h2>\r\n                <button \r\n                  onClick={() => setShowParticipants(!showParticipants)}\r\n                  className=\"text-sm text-blue-600 hover:text-blue-800\"\r\n                >\r\n                  {showParticipants ? 'Скрыть участников' : 'Показать участников'}\r\n                </button>\r\n              </div>\r\n              \r\n              {showParticipants && (\r\n                <div className=\"p-4 border-b bg-gray-50\">\r\n                  <h3 className=\"font-medium mb-2\">Участники чата:</h3>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {participants.map((participant, index) => (\r\n                      <div key={index} className=\"bg-white px-3 py-1 rounded-full border text-sm flex items-center\">\r\n                        <span className=\"mr-1\">\r\n                          {participant.first_name} {participant.last_name}\r\n                        </span>\r\n                        <span className={`text-xs px-1 rounded ${participant.type === 'employee' ? 'bg-green-100 text-green-800' : 'bg-blue-100 text-blue-800'}`}>\r\n                          {participant.type === 'employee' ? 'Сотрудник' : 'Пользователь'}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Сообщения */}\r\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n                {messages.map((message, index) => (\r\n                  <div \r\n                    key={index} \r\n                    className={`flex ${message.type === 'employee' ? 'justify-end' : 'justify-start'}`}\r\n                  >\r\n                    <div \r\n                      className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${message.type === 'employee' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\r\n                      style={{ wordBreak: 'break-word' }}\r\n                    >\r\n                      <div className=\"font-semibold\">\r\n                        {message.first_name} {message.last_name}\r\n                      </div>\r\n                      <div className=\"whitespace-pre-wrap\">{message.content}</div>\r\n                      <div className=\"text-xs opacity-70 mt-1\">\r\n                        {new Date(message.time).toLocaleString()}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Форма отправки сообщения */}\r\n              <div className=\"p-4 border-t\">\r\n                <div className=\"flex space-x-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n                    placeholder=\"Введите сообщение...\"\r\n                    className=\"flex-1 border rounded px-3 py-2\"\r\n                  />\r\n                  <button\r\n                    onClick={handleSendMessage}\r\n                    className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded\"\r\n                  >\r\n                    Отправить\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"flex-1 flex items-center justify-center text-gray-500\">\r\n              Выберите чат для начала общения\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}