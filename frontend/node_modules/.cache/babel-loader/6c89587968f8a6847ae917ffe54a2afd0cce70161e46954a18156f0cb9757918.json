{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u0432\\u043A\\u0440\\\\Project\\\\frontend\\\\src\\\\Auth\\\\Profile\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\n// components/Chat.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../../AuthContext';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3001';\nconst Chat = () => {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [chatMembers, setChatMembers] = useState([]);\n  const socketRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // Инициализация WebSocket соединения\n    socketRef.current = io(API_URL || 'http://localhost:3001');\n\n    // Загрузка списка чатов\n    const fetchChats = async () => {\n      try {\n        const response = await fetch(`${API_URL}/chat/my`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Ошибка ${response.status}: ${errorText}`);\n        }\n        const data = await response.json();\n        // Сортируем чаты по дате последнего сообщения (новые сверху)\n        const sortedChats = data.sort((a, b) => new Date(b.last_message_time || b.created_at) - new Date(a.last_message_time || a.created_at));\n        setChats(sortedChats);\n        if (sortedChats.length > 0) {\n          setSelectedChat(sortedChats[0]);\n        }\n      } catch (err) {\n        setError(err.message);\n        console.error('Ошибка загрузки чатов:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchChats();\n\n    // Обработчики событий WebSocket\n    socketRef.current.on('new-message', message => {\n      if (message.chat_id === (selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.id)) {\n        setMessages(prev => [...prev, message]);\n        scrollToBottom();\n      }\n\n      // Обновляем порядок чатов при новом сообщении\n      setChats(prev => {\n        const updatedChats = [...prev];\n        const chatIndex = updatedChats.findIndex(c => c.id === message.chat_id);\n        if (chatIndex > -1) {\n          const [chat] = updatedChats.splice(chatIndex, 1);\n          chat.last_message_time = message.time;\n          updatedChats.unshift(chat);\n        }\n        return updatedChats;\n      });\n    });\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (selectedChat) {\n      // Присоединяемся к чату через WebSocket\n      socketRef.current.emit('join-chat', selectedChat.id, user.id);\n\n      // Загружаем историю сообщений\n      const fetchMessages = async () => {\n        try {\n          const response = await fetch(`${API_URL}/chat/${selectedChat.id}/messages`, {\n            headers: {\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          const data = await response.json();\n          setMessages(data);\n          scrollToBottom();\n        } catch (err) {\n          setError(err.message);\n        }\n      };\n\n      // Загружаем участников чата\n      const fetchChatMembers = async () => {\n        try {\n          const response = await fetch(`${API_URL}/chat/${selectedChat.id}/participants`, {\n            headers: {\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          const data = await response.json();\n          setChatMembers(data);\n        } catch (err) {\n          console.error('Ошибка загрузки участников чата:', err);\n        }\n      };\n      fetchMessages();\n      fetchChatMembers();\n    }\n  }, [selectedChat, user.id]);\n  const scrollToBottom = () => {\n    setTimeout(() => {\n      var _messagesEndRef$curre;\n      (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }, 100);\n  };\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !selectedChat) return;\n    const messageData = {\n      chatId: selectedChat.id,\n      userId: user.id,\n      content: newMessage,\n      isEmployee: user.role && user.role !== 'user',\n      type: user.role && user.role !== 'user' ? 'employee' : 'user',\n      first_name: user.first_name,\n      last_name: user.last_name,\n      time: new Date().toISOString()\n    };\n    try {\n      // 1. Оптимистичное обновление UI\n      setMessages(prev => [...prev, messageData]);\n      scrollToBottom();\n\n      // 2. Отправка на сервер\n      const response = await fetch(`${API_URL}/chat/${selectedChat.id}/messages`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          content: newMessage\n        })\n      });\n      if (!response.ok) throw new Error('Ошибка при сохранении сообщения');\n\n      // 3. Отправка через сокет\n      socketRef.current.emit('send-message', messageData);\n      setNewMessage('');\n    } catch (err) {\n      // Откатываем оптимистичное обновление при ошибке\n      setMessages(prev => prev.filter(m => m.time !== messageData.time));\n      setError(err.message);\n    }\n  };\n  const handleCreateChat = async () => {\n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          name: `Чат с поддержкой`\n        })\n      });\n      const data = await response.json();\n      // Добавляем новый чат в начало списка\n      setChats(prev => [data, ...prev]);\n      setSelectedChat(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center py-8\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-2 bg-red-100 text-red-700 rounded\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold\",\n        children: \"\\u041C\\u043E\\u0438 \\u0447\\u0430\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateChat,\n        className: \"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded\",\n        children: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0447\\u0430\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-[500px] border rounded-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/3 border-r bg-gray-50 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-semibold\",\n            children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u0447\\u0430\\u0442\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-y-auto flex-1\",\n          children: chats.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 text-center text-gray-500\",\n            children: \"\\u041D\\u0435\\u0442 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0445 \\u0447\\u0430\\u0442\\u043E\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this) : chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-4 border-b cursor-pointer hover:bg-gray-100 ${(selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.id) === chat.id ? 'bg-blue-50' : ''}`,\n            onClick: () => setSelectedChat(chat),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium\",\n              children: chat.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"ID: \", chat.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-400\",\n              children: [\"\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0435\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435: \", chat.last_message_time ? new Date(chat.last_message_time).toLocaleString() : 'нет']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2/3 flex flex-col\",\n        children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-b flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"font-semibold\",\n              children: selectedChat.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438: \", chatMembers.map(m => `${m.first_name} ${m.last_name}`).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n            children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex ${message.user_id === user.id ? 'justify-end' : 'justify-start'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${message.user_id === user.id ? 'bg-blue-500 text-white' : 'bg-gray-200'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-semibold\",\n                  children: [message.first_name, \" \", message.last_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs opacity-70 mt-1\",\n                  children: new Date(message.time).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border-t\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newMessage,\n                onChange: e => setNewMessage(e.target.value),\n                onKeyPress: e => e.key === 'Enter' && handleSendMessage(),\n                placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n                className: \"flex-1 border rounded px-3 py-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSendMessage,\n                className: \"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded\",\n                children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex items-center justify-center text-gray-500\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0447\\u0430\\u0442 \\u0434\\u043B\\u044F \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"znZFPF8zWGMBYCwE+jYnTVohm7w=\", false, function () {\n  return [useAuth];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","io","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","Chat","_s","user","logout","chats","setChats","selectedChat","setSelectedChat","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","chatMembers","setChatMembers","socketRef","messagesEndRef","current","fetchChats","response","fetch","headers","localStorage","getItem","ok","errorText","text","Error","status","data","json","sortedChats","sort","a","b","Date","last_message_time","created_at","length","err","message","console","on","chat_id","id","prev","scrollToBottom","updatedChats","chatIndex","findIndex","c","chat","splice","time","unshift","disconnect","emit","fetchMessages","fetchChatMembers","setTimeout","_messagesEndRef$curre","scrollIntoView","behavior","handleSendMessage","trim","messageData","chatId","userId","content","isEmployee","role","type","first_name","last_name","toISOString","method","body","JSON","stringify","filter","m","handleCreateChat","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","toLocaleString","join","index","user_id","ref","value","onChange","e","target","onKeyPress","key","placeholder","_c","$RefreshReg$"],"sources":["E:/вкр/Project/frontend/src/Auth/Profile/components/Chat.js"],"sourcesContent":["// components/Chat.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../../AuthContext';\r\nimport io from 'socket.io-client';\r\n\r\nconst API_URL = 'http://localhost:3001';\r\nconst Chat = () => {\r\n  const { user, logout } = useAuth();\r\n  const [chats, setChats] = useState([]);\r\n  const [selectedChat, setSelectedChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [chatMembers, setChatMembers] = useState([]);\r\n  const socketRef = useRef(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Инициализация WebSocket соединения\r\n    socketRef.current = io(API_URL || 'http://localhost:3001');\r\n\r\n    // Загрузка списка чатов\r\n    const fetchChats = async () => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/chat/my`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          throw new Error(`Ошибка ${response.status}: ${errorText}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        // Сортируем чаты по дате последнего сообщения (новые сверху)\r\n        const sortedChats = data.sort((a, b) => new Date(b.last_message_time || b.created_at) - new Date(a.last_message_time || a.created_at));\r\n        setChats(sortedChats);\r\n        if (sortedChats.length > 0) {\r\n          setSelectedChat(sortedChats[0]);\r\n        }\r\n      } catch (err) {\r\n        setError(err.message);\r\n        console.error('Ошибка загрузки чатов:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchChats();\r\n\r\n    // Обработчики событий WebSocket\r\n    socketRef.current.on('new-message', (message) => {\r\n      if (message.chat_id === selectedChat?.id) {\r\n        setMessages(prev => [...prev, message]);\r\n        scrollToBottom();\r\n      }\r\n      \r\n      // Обновляем порядок чатов при новом сообщении\r\n      setChats(prev => {\r\n        const updatedChats = [...prev];\r\n        const chatIndex = updatedChats.findIndex(c => c.id === message.chat_id);\r\n        if (chatIndex > -1) {\r\n          const [chat] = updatedChats.splice(chatIndex, 1);\r\n          chat.last_message_time = message.time;\r\n          updatedChats.unshift(chat);\r\n        }\r\n        return updatedChats;\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedChat) {\r\n      // Присоединяемся к чату через WebSocket\r\n      socketRef.current.emit('join-chat', selectedChat.id, user.id);\r\n\r\n      // Загружаем историю сообщений\r\n      const fetchMessages = async () => {\r\n        try {\r\n          const response = await fetch(`${API_URL}/chat/${selectedChat.id}/messages`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          });\r\n          const data = await response.json();\r\n          setMessages(data);\r\n          scrollToBottom();\r\n        } catch (err) {\r\n          setError(err.message);\r\n        }\r\n      };\r\n\r\n      // Загружаем участников чата\r\n      const fetchChatMembers = async () => {\r\n        try {\r\n          const response = await fetch(`${API_URL}/chat/${selectedChat.id}/participants`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          });\r\n          const data = await response.json();\r\n          setChatMembers(data);\r\n        } catch (err) {\r\n          console.error('Ошибка загрузки участников чата:', err);\r\n        }\r\n      };\r\n\r\n      fetchMessages();\r\n      fetchChatMembers();\r\n    }\r\n  }, [selectedChat, user.id]);\r\n\r\n  const scrollToBottom = () => {\r\n    setTimeout(() => {\r\n      messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    }, 100);\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!newMessage.trim() || !selectedChat) return;\r\n  \r\n    const messageData = {\r\n      chatId: selectedChat.id,\r\n      userId: user.id,\r\n      content: newMessage,\r\n      isEmployee: user.role && user.role !== 'user',\r\n      type: user.role && user.role !== 'user' ? 'employee' : 'user',\r\n      first_name: user.first_name,\r\n      last_name: user.last_name,\r\n      time: new Date().toISOString()\r\n    };\r\n  \r\n    try {\r\n      // 1. Оптимистичное обновление UI\r\n      setMessages(prev => [...prev, messageData]);\r\n      scrollToBottom();\r\n      \r\n      // 2. Отправка на сервер\r\n      const response = await fetch(`${API_URL}/chat/${selectedChat.id}/messages`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({ content: newMessage })\r\n      });\r\n  \r\n      if (!response.ok) throw new Error('Ошибка при сохранении сообщения');\r\n  \r\n      // 3. Отправка через сокет\r\n      socketRef.current.emit('send-message', messageData);\r\n      \r\n      setNewMessage('');\r\n    } catch (err) {\r\n      // Откатываем оптимистичное обновление при ошибке\r\n      setMessages(prev => prev.filter(m => m.time !== messageData.time));\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleCreateChat = async () => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/chat`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({ name: `Чат с поддержкой` })\r\n      });\r\n      const data = await response.json();\r\n      // Добавляем новый чат в начало списка\r\n      setChats(prev => [data, ...prev]);\r\n      setSelectedChat(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center py-8\">Загрузка...</div>;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full\">\r\n      {error && <div className=\"mb-4 p-2 bg-red-100 text-red-700 rounded\">{error}</div>}\r\n\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h3 className=\"text-lg font-semibold\">Мои чаты</h3>\r\n        <button \r\n          onClick={handleCreateChat}\r\n          className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded\"\r\n        >\r\n          Новый чат\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"flex h-[500px] border rounded-lg overflow-hidden\">\r\n        {/* Список чатов */}\r\n        <div className=\"w-1/3 border-r bg-gray-50 flex flex-col\">\r\n          <div className=\"p-4 border-b\">\r\n            <h2 className=\"font-semibold\">Доступные чаты</h2>\r\n          </div>\r\n          <div className=\"overflow-y-auto flex-1\">\r\n            {chats.length === 0 ? (\r\n              <div className=\"p-4 text-center text-gray-500\">Нет доступных чатов</div>\r\n            ) : (\r\n              chats.map(chat => (\r\n                <div \r\n                  key={chat.id} \r\n                  className={`p-4 border-b cursor-pointer hover:bg-gray-100 ${selectedChat?.id === chat.id ? 'bg-blue-50' : ''}`}\r\n                  onClick={() => setSelectedChat(chat)}\r\n                >\r\n                  <h3 className=\"font-medium\">{chat.name}</h3>\r\n                  <p className=\"text-sm text-gray-500\">ID: {chat.id}</p>\r\n                  <p className=\"text-xs text-gray-400\">\r\n                    Последнее сообщение: {chat.last_message_time ? new Date(chat.last_message_time).toLocaleString() : 'нет'}\r\n                  </p>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Окно чата */}\r\n        <div className=\"w-2/3 flex flex-col\">\r\n          {selectedChat ? (\r\n            <>\r\n              <div className=\"p-4 border-b flex justify-between items-center\">\r\n                <h2 className=\"font-semibold\">{selectedChat.name}</h2>\r\n                <div className=\"text-sm text-gray-600\">\r\n                  Участники: {chatMembers.map(m => `${m.first_name} ${m.last_name}`).join(', ')}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Сообщения */}\r\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n                {messages.map((message, index) => (\r\n                  <div \r\n                    key={index} \r\n                    className={`flex ${message.user_id === user.id ? 'justify-end' : 'justify-start'}`}\r\n                  >\r\n                    <div \r\n                      className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${message.user_id === user.id ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\r\n                    >\r\n                      <div className=\"font-semibold\">\r\n                        {message.first_name} {message.last_name}\r\n                      </div>\r\n                      <div>{message.content}</div>\r\n                      <div className=\"text-xs opacity-70 mt-1\">\r\n                        {new Date(message.time).toLocaleString()}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                <div ref={messagesEndRef} />\r\n              </div>\r\n\r\n              {/* Форма отправки сообщения */}\r\n              <div className=\"p-4 border-t\">\r\n                <div className=\"flex space-x-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n                    placeholder=\"Введите сообщение...\"\r\n                    className=\"flex-1 border rounded px-3 py-2\"\r\n                  />\r\n                  <button\r\n                    onClick={handleSendMessage}\r\n                    className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded\"\r\n                  >\r\n                    Отправить\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"flex-1 flex items-center justify-center text-gray-500\">\r\n              Выберите чат для начала общения\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}