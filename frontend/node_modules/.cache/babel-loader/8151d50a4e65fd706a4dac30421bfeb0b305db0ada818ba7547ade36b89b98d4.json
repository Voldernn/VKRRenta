{"ast":null,"code":"const API_URL = 'http://localhost:3001/employee';\nexport const loginEmployee = async (email, password) => {\n  const response = await fetch(`${API_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n  if (response.ok) {\n    localStorage.setItem('employeeToken', data.token);\n    localStorage.setItem('employeeId', data.id); // Сохраняем ID сотрудника\n    return data;\n  } else {\n    throw new Error(data.message || 'Ошибка авторизации');\n  }\n};\nexport const getEmployeeProfile = async () => {\n  const token = localStorage.getItem('employeeToken');\n  const response = await fetch(`${API_URL}/me`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.message || 'Ошибка получения профиля');\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_URL","loginEmployee","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","id","Error","message","getEmployeeProfile","getItem","errorData"],"sources":["E:/вкр/Project/frontend/src/Employee/services/AuthService.js"],"sourcesContent":["const API_URL = 'http://localhost:3001/employee';\r\n\r\n\r\nexport const loginEmployee = async (email, password) => {\r\n  const response = await fetch(`${API_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n  \r\n  const data = await response.json();\r\n  if (response.ok) {\r\n    localStorage.setItem('employeeToken', data.token);\r\n    localStorage.setItem('employeeId', data.id); // Сохраняем ID сотрудника\r\n    return data;\r\n  } else {\r\n    throw new Error(data.message || 'Ошибка авторизации');\r\n  }\r\n};\r\n\r\nexport const getEmployeeProfile = async () => {\r\n  const token = localStorage.getItem('employeeToken');\r\n  const response = await fetch(`${API_URL}/me`, {\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.message || 'Ошибка получения профиля');\r\n  }\r\n\r\n  return response.json();\r\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,gCAAgC;AAGhD,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACtD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,QAAQ,EAAE;IAC/CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;IACfC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEJ,IAAI,CAACK,KAAK,CAAC;IACjDF,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEJ,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC;IAC7C,OAAON,IAAI;EACb,CAAC,MAAM;IACL,MAAM,IAAIO,KAAK,CAACP,IAAI,CAACQ,OAAO,IAAI,oBAAoB,CAAC;EACvD;AACF,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,MAAMJ,KAAK,GAAGF,YAAY,CAACO,OAAO,CAAC,eAAe,CAAC;EACnD,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,KAAK,EAAE;IAC5CO,OAAO,EAAE;MACP,eAAe,EAAE,UAAUS,KAAK;IAClC;EACF,CAAC,CAAC;EAEF,IAAI,CAACZ,QAAQ,CAACS,EAAE,EAAE;IAChB,MAAMS,SAAS,GAAG,MAAMlB,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACvC,MAAM,IAAIM,KAAK,CAACI,SAAS,CAACH,OAAO,IAAI,0BAA0B,CAAC;EAClE;EAEA,OAAOf,QAAQ,CAACQ,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}