{"ast":null,"code":"const API_URL = 'http://localhost:3001/contract';\nconst fetchWithAuth = async (url, options = {}) => {\n  const token = localStorage.getItem('employeeToken');\n  const response = await fetch(url, {\n    ...options,\n    headers: {\n      ...options.headers,\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.message || 'Ошибка запроса');\n  }\n  return response.json();\n};\nexport const getContracts = async () => {\n  return fetchWithAuth(`${API_URL}/all`);\n};\nexport const getUserContracts = async userId => {\n  return fetchWithAuth(`${API_URL}/user/${userId}`);\n};\nexport const createContract = async contractData => {\n  return fetchWithAuth(API_URL, {\n    method: 'POST',\n    body: JSON.stringify(contractData)\n  });\n};\nexport const updateContract = async (id, contractData) => {\n  return fetchWithAuth(`${API_URL}/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(contractData)\n  });\n};\nexport const getContract = async id => {\n  const response = await fetch(`${API_URL}/${id}`, {\n    headers: {\n      'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`,\n      'Content-Type': 'application/json'\n    }\n  });\n  if (!response.ok) {\n    const error = await response.text(); // Читаем текст ошибки\n    throw new Error(error.includes('<!DOCTYPE html>') ? 'Сервер вернул HTML вместо JSON. Проверьте URL и права доступа.' : error);\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_URL","fetchWithAuth","url","options","token","localStorage","getItem","response","fetch","headers","ok","errorData","json","Error","message","getContracts","getUserContracts","userId","createContract","contractData","method","body","JSON","stringify","updateContract","id","getContract","error","text","includes"],"sources":["E:/вкр/VKRRenta/frontend/src/Employee/services/ContractService.js"],"sourcesContent":["const API_URL = 'http://localhost:3001/contract';\r\n\r\nconst fetchWithAuth = async (url, options = {}) => {\r\n  const token = localStorage.getItem('employeeToken');\r\n  const response = await fetch(url, {\r\n    ...options,\r\n    headers: {\r\n      ...options.headers,\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.message || 'Ошибка запроса');\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const getContracts = async () => {\r\n  return fetchWithAuth(`${API_URL}/all`);\r\n};\r\n\r\nexport const getUserContracts = async (userId) => {\r\n  return fetchWithAuth(`${API_URL}/user/${userId}`);\r\n};\r\n\r\nexport const createContract = async (contractData) => {\r\n  return fetchWithAuth(API_URL, {\r\n    method: 'POST',\r\n    body: JSON.stringify(contractData)\r\n  });\r\n};\r\n\r\nexport const updateContract = async (id, contractData) => {\r\n  return fetchWithAuth(`${API_URL}/${id}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(contractData)\r\n  });\r\n};\r\n\r\nexport const getContract = async (id) => {\r\n    const response = await fetch(`${API_URL}/${id}`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('employeeToken')}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      const error = await response.text(); // Читаем текст ошибки\r\n      throw new Error(error.includes('<!DOCTYPE html>') \r\n        ? 'Сервер вернул HTML вместо JSON. Проверьте URL и права доступа.'\r\n        : error);\r\n    }\r\n  \r\n    return response.json();\r\n  };"],"mappings":"AAAA,MAAMA,OAAO,GAAG,gCAAgC;AAEhD,MAAMC,aAAa,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACjD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EACnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAG,EAAE;IAChC,GAAGC,OAAO;IACVM,OAAO,EAAE;MACP,GAAGN,OAAO,CAACM,OAAO;MAClB,eAAe,EAAE,UAAUL,KAAK,EAAE;MAClC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,IAAI,CAACG,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,gBAAgB,CAAC;EACxD;EAEA,OAAOP,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,OAAOd,aAAa,CAAC,GAAGD,OAAO,MAAM,CAAC;AACxC,CAAC;AAED,OAAO,MAAMgB,gBAAgB,GAAG,MAAOC,MAAM,IAAK;EAChD,OAAOhB,aAAa,CAAC,GAAGD,OAAO,SAASiB,MAAM,EAAE,CAAC;AACnD,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAOC,YAAY,IAAK;EACpD,OAAOlB,aAAa,CAACD,OAAO,EAAE;IAC5BoB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,YAAY;EACnC,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMK,cAAc,GAAG,MAAAA,CAAOC,EAAE,EAAEN,YAAY,KAAK;EACxD,OAAOlB,aAAa,CAAC,GAAGD,OAAO,IAAIyB,EAAE,EAAE,EAAE;IACvCL,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,YAAY;EACnC,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMO,WAAW,GAAG,MAAOD,EAAE,IAAK;EACrC,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,OAAO,IAAIyB,EAAE,EAAE,EAAE;IAC/ChB,OAAO,EAAE;MACP,eAAe,EAAE,UAAUJ,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;MAClE,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAMiB,KAAK,GAAG,MAAMpB,QAAQ,CAACqB,IAAI,CAAC,CAAC,CAAC,CAAC;IACrC,MAAM,IAAIf,KAAK,CAACc,KAAK,CAACE,QAAQ,CAAC,iBAAiB,CAAC,GAC7C,gEAAgE,GAChEF,KAAK,CAAC;EACZ;EAEA,OAAOpB,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}