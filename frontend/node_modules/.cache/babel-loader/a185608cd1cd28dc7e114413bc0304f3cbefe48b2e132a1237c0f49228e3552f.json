{"ast":null,"code":"const API_URL = 'http://localhost:3001/admin/users';\nconst fetchWithAuth = async (url, options = {}) => {\n  const token = localStorage.getItem('employeeToken');\n  const response = await fetch(url, {\n    ...options,\n    headers: {\n      ...options.headers,\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.message || 'Ошибка запроса');\n  }\n  return response.json();\n};\nexport const getUsers = async () => {\n  return fetchWithAuth(API_URL);\n};","map":{"version":3,"names":["API_URL","fetchWithAuth","url","options","token","localStorage","getItem","response","fetch","headers","ok","errorData","json","Error","message","getUsers"],"sources":["E:/вкр/Project/frontend/src/Employee/services/UserService.js"],"sourcesContent":["const API_URL = 'http://localhost:3001/admin/users';\r\n\r\nconst fetchWithAuth = async (url, options = {}) => {\r\n  const token = localStorage.getItem('employeeToken');\r\n  const response = await fetch(url, {\r\n    ...options,\r\n    headers: {\r\n      ...options.headers,\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.message || 'Ошибка запроса');\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const getUsers = async () => {\r\n  return fetchWithAuth(API_URL);\r\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,mCAAmC;AAEnD,MAAMC,aAAa,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACjD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EACnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAG,EAAE;IAChC,GAAGC,OAAO;IACVM,OAAO,EAAE;MACP,GAAGN,OAAO,CAACM,OAAO;MAClB,eAAe,EAAE,UAAUL,KAAK,EAAE;MAClC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,IAAI,CAACG,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,gBAAgB,CAAC;EACxD;EAEA,OAAOP,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,OAAOd,aAAa,CAACD,OAAO,CAAC;AAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}