{"ast":null,"code":"const API_URL = 'http://localhost:3001/admin/chats';\nconst fetchWithAuth = async (url, options = {}) => {\n  const token = localStorage.getItem('employeeToken');\n  const response = await fetch(url, {\n    ...options,\n    headers: {\n      ...options.headers,\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  });\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({}));\n    throw new Error(errorData.message || 'Ошибка запроса');\n  }\n\n  // Проверяем Content-Type перед попыткой парсинга JSON\n  const contentType = response.headers.get('content-type');\n  if (!contentType || !contentType.includes('application/json')) {\n    return null;\n  }\n  return response.json();\n};\nexport const getChats = async () => {\n  return fetchWithAuth(API_URL);\n};\nexport const getChat = async id => {\n  return fetchWithAuth(`${API_URL}/${id}`);\n};\nexport const createChat = async chatData => {\n  return fetchWithAuth(API_URL, {\n    method: 'POST',\n    body: JSON.stringify(chatData)\n  });\n};\nexport const updateChat = async (id, chatData) => {\n  return fetchWithAuth(`${API_URL}/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(chatData)\n  });\n};\nexport const deleteChat = async id => {\n  await fetchWithAuth(`${API_URL}/${id}`, {\n    method: 'DELETE'\n  });\n  return {\n    success: true\n  };\n};","map":{"version":3,"names":["API_URL","fetchWithAuth","url","options","token","localStorage","getItem","response","fetch","headers","ok","errorData","json","catch","Error","message","contentType","get","includes","getChats","getChat","id","createChat","chatData","method","body","JSON","stringify","updateChat","deleteChat","success"],"sources":["E:/вкр/Project/frontend/src/Employee/admin/services/ChatService.js"],"sourcesContent":["const API_URL = 'http://localhost:3001/admin/chats';\r\n\r\nconst fetchWithAuth = async (url, options = {}) => {\r\n  const token = localStorage.getItem('employeeToken');\r\n  const response = await fetch(url, {\r\n    ...options,\r\n    headers: {\r\n      ...options.headers,\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({}));\r\n    throw new Error(errorData.message || 'Ошибка запроса');\r\n  }\r\n\r\n  // Проверяем Content-Type перед попыткой парсинга JSON\r\n  const contentType = response.headers.get('content-type');\r\n  if (!contentType || !contentType.includes('application/json')) {\r\n    return null;\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const getChats = async () => {\r\n  return fetchWithAuth(API_URL);\r\n};\r\n\r\nexport const getChat = async (id) => {\r\n  return fetchWithAuth(`${API_URL}/${id}`);\r\n};\r\n\r\nexport const createChat = async (chatData) => {\r\n  return fetchWithAuth(API_URL, {\r\n    method: 'POST',\r\n    body: JSON.stringify(chatData),\r\n  });\r\n};\r\n\r\nexport const updateChat = async (id, chatData) => {\r\n  return fetchWithAuth(`${API_URL}/${id}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(chatData),\r\n  });\r\n};\r\n\r\nexport const deleteChat = async (id) => {\r\n  await fetchWithAuth(`${API_URL}/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return { success: true };\r\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,mCAAmC;AAEnD,MAAMC,aAAa,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACjD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EACnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAG,EAAE;IAChC,GAAGC,OAAO;IACVM,OAAO,EAAE;MACP,GAAGN,OAAO,CAACM,OAAO;MAClB,eAAe,EAAE,UAAUL,KAAK,EAAE;MAClC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,IAAI,CAACG,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACzD,MAAM,IAAIC,KAAK,CAACH,SAAS,CAACI,OAAO,IAAI,gBAAgB,CAAC;EACxD;;EAEA;EACA,MAAMC,WAAW,GAAGT,QAAQ,CAACE,OAAO,CAACQ,GAAG,CAAC,cAAc,CAAC;EACxD,IAAI,CAACD,WAAW,IAAI,CAACA,WAAW,CAACE,QAAQ,CAAC,kBAAkB,CAAC,EAAE;IAC7D,OAAO,IAAI;EACb;EAEA,OAAOX,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMO,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,OAAOlB,aAAa,CAACD,OAAO,CAAC;AAC/B,CAAC;AAED,OAAO,MAAMoB,OAAO,GAAG,MAAOC,EAAE,IAAK;EACnC,OAAOpB,aAAa,CAAC,GAAGD,OAAO,IAAIqB,EAAE,EAAE,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,OAAOtB,aAAa,CAACD,OAAO,EAAE;IAC5BwB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ;EAC/B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG,MAAAA,CAAOP,EAAE,EAAEE,QAAQ,KAAK;EAChD,OAAOtB,aAAa,CAAC,GAAGD,OAAO,IAAIqB,EAAE,EAAE,EAAE;IACvCG,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ;EAC/B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,MAAOR,EAAE,IAAK;EACtC,MAAMpB,aAAa,CAAC,GAAGD,OAAO,IAAIqB,EAAE,EAAE,EAAE;IACtCG,MAAM,EAAE;EACV,CAAC,CAAC;EACF,OAAO;IAAEM,OAAO,EAAE;EAAK,CAAC;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}